{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport openDB from '../configs/database/dao';\n\nclass BookRepository {\n  constructor(dao) {\n    _defineProperty(this, \"getAll\", () => {\n      //   return this.dao.all(`SELECT * FROM books`)\n      // const db = openDB();\n      const db = this.openDB();\n      const books = db.all('select * from books');\n      return books;\n    });\n\n    // this.dao = dao\n    this.openDB = new openDB();\n  } // update(book) {\n  //     const { id, name } = book\n  //     // return this.dao.run(\n  //     //   `UPDATE books SET name = ? WHERE id = ?`,\n  //     //   [name, id]\n  //     // )\n  //     return this.dao.run(\n  //         `UPDATE books SET name = ? WHERE id = ?`,\n  //         [name, id]\n  //       )\n  //     const statement = await db.prepare('UPDATE books SET availableQty= ? where bookId= ? ');\n  //       const result = await statement.run(\n  //           reqBody.cartData[index].availableQty-1,\n  //           reqBody.cartData[index].bookId,\n  //       )\n  //       result.finalize();\n  //   }\n\n\n}\n\nexport default BookRepository;","map":{"version":3,"sources":["/Users/Abhipray 1/Desktop/MY home/mYY work/HEXAD_assignment/Hexad_trial_code/hexd/backend/repositories/bookRepo.js"],"names":["openDB","BookRepository","constructor","dao","db","books","all"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;;AAEA,MAAMC,cAAN,CAAqB;AACjBC,EAAAA,WAAW,CAACC,GAAD,EAAM;AAAA,oCAKR,MAAM;AACf;AACI;AACA,YAAMC,EAAE,GAAG,KAAKJ,MAAL,EAAX;AACA,YAAMK,KAAK,GAAGD,EAAE,CAACE,GAAH,CAAO,qBAAP,CAAd;AACA,aAAOD,KAAP;AACH,KAXgB;;AACb;AACA,SAAKL,MAAL,GAAc,IAAIA,MAAJ,EAAd;AACD,GAJc,CAcjB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAhCiB;;AAmCnB,eAAeC,cAAf","sourcesContent":["import openDB from '../configs/database/dao';\n\nclass BookRepository {\n    constructor(dao) {\n        // this.dao = dao\n        this.openDB = new openDB();\n      }\n  \n    getAll = () => {\n    //   return this.dao.all(`SELECT * FROM books`)\n        // const db = openDB();\n        const db = this.openDB();\n        const books = db.all('select * from books');\n        return books;\n    }\n\n    // update(book) {\n    //     const { id, name } = book\n    //     // return this.dao.run(\n    //     //   `UPDATE books SET name = ? WHERE id = ?`,\n    //     //   [name, id]\n    //     // )\n\n    //     return this.dao.run(\n    //         `UPDATE books SET name = ? WHERE id = ?`,\n    //         [name, id]\n    //       )\n\n    //     const statement = await db.prepare('UPDATE books SET availableQty= ? where bookId= ? ');\n    //       const result = await statement.run(\n    //           reqBody.cartData[index].availableQty-1,\n    //           reqBody.cartData[index].bookId,\n    //       )\n    //       result.finalize();\n    //   }\n  }\n\n  export default BookRepository;"]},"metadata":{},"sourceType":"module"}