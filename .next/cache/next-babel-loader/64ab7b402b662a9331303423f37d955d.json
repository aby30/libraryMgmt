{"ast":null,"code":"import openDB from '../configs/database/dao';\nconst BookRepository = {\n  // constructor(dao) {\n  //     // this.dao = dao\n  //     this.openDB = new openDB();\n  //   }\n  getAll: async () => {\n    //   return this.dao.all(`SELECT * FROM books`)\n    const db = await openDB(); // const db = this.openDB();\n\n    const books = await db.all('select * from books');\n    return books;\n  },\n  // update(book) {\n  //     const { id, name } = book\n  //     // return this.dao.run(\n  //     //   `UPDATE books SET name = ? WHERE id = ?`,\n  //     //   [name, id]\n  //     // )\n  //     return this.dao.run(\n  //         `UPDATE books SET name = ? WHERE id = ?`,\n  //         [name, id]\n  //       )\n  //     const statement = await db.prepare('UPDATE books SET availableQty= ? where bookId= ? ');\n  //       const result = await statement.run(\n  //           reqBody.cartData[index].availableQty-1,\n  //           reqBody.cartData[index].bookId,\n  //       )\n  //       result.finalize();\n  //   }\n  update: async book => {\n    const {\n      bookId,\n      availableQty,\n      operation = 'increment'\n    } = book;\n    const db = await openDB(); // return this.dao.run(\n    //   `UPDATE books SET name = ? WHERE id = ?`,\n    //   [name, id]\n    // )\n    // return this.dao.run(\n    //     `UPDATE books SET name = ? WHERE id = ?`,\n    //     [name, id]\n    //   )\n\n    const finalQty = operation === 'decrement' ? availableQty - 1 : availableQty + 1;\n    const statement = await db.prepare('UPDATE books SET availableQty= ? where bookId= ? ');\n    const result = await statement.run(finalQty, bookId);\n    result.finalize();\n  }\n};\nexport default BookRepository;","map":{"version":3,"sources":["/Users/Abhipray 1/Desktop/MY home/mYY work/HEXAD_assignment/Hexad_trial_code/hexd/backend/repositories/bookRepo.js"],"names":["openDB","BookRepository","getAll","db","books","all","update","book","bookId","availableQty","operation","finalQty","statement","prepare","result","run","finalize"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AAEA,MAAMC,cAAc,GAAG;AACnB;AACA;AACA;AACA;AAEAC,EAAAA,MAAM,EAAE,YAAY;AACpB;AACI,UAAMC,EAAE,GAAG,MAAMH,MAAM,EAAvB,CAFgB,CAGhB;;AACA,UAAMI,KAAK,GAAG,MAAMD,EAAE,CAACE,GAAH,CAAO,qBAAP,CAApB;AACA,WAAOD,KAAP;AACH,GAZkB;AAcnB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACAE,EAAAA,MAAM,EAAE,MAAOC,IAAP,IAAgB;AACpB,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,YAAV;AAAwBC,MAAAA,SAAS,GAAG;AAApC,QAAoDH,IAA1D;AACA,UAAMJ,EAAE,GAAG,MAAMH,MAAM,EAAvB,CAFoB,CAGpB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,UAAMW,QAAQ,GAAGD,SAAS,KAAK,WAAd,GAA4BD,YAAY,GAAC,CAAzC,GAA6CA,YAAY,GAAC,CAA3E;AAEA,UAAMG,SAAS,GAAG,MAAMT,EAAE,CAACU,OAAH,CAAW,mDAAX,CAAxB;AACA,UAAMC,MAAM,GAAG,MAAMF,SAAS,CAACG,GAAV,CACjBJ,QADiB,EAEjBH,MAFiB,CAArB;AAIAM,IAAAA,MAAM,CAACE,QAAP;AACD;AAtDgB,CAAvB;AAyDE,eAAef,cAAf","sourcesContent":["import openDB from '../configs/database/dao';\n\nconst BookRepository = {\n    // constructor(dao) {\n    //     // this.dao = dao\n    //     this.openDB = new openDB();\n    //   }\n  \n    getAll: async () => {\n    //   return this.dao.all(`SELECT * FROM books`)\n        const db = await openDB();\n        // const db = this.openDB();\n        const books = await db.all('select * from books');\n        return books;\n    },\n\n    // update(book) {\n    //     const { id, name } = book\n    //     // return this.dao.run(\n    //     //   `UPDATE books SET name = ? WHERE id = ?`,\n    //     //   [name, id]\n    //     // )\n\n    //     return this.dao.run(\n    //         `UPDATE books SET name = ? WHERE id = ?`,\n    //         [name, id]\n    //       )\n\n    //     const statement = await db.prepare('UPDATE books SET availableQty= ? where bookId= ? ');\n    //       const result = await statement.run(\n    //           reqBody.cartData[index].availableQty-1,\n    //           reqBody.cartData[index].bookId,\n    //       )\n    //       result.finalize();\n    //   }\n    update: async (book) => {\n        const { bookId, availableQty, operation = 'increment' } = book\n        const db = await openDB();\n        // return this.dao.run(\n        //   `UPDATE books SET name = ? WHERE id = ?`,\n        //   [name, id]\n        // )\n\n        // return this.dao.run(\n        //     `UPDATE books SET name = ? WHERE id = ?`,\n        //     [name, id]\n        //   )\n\n        const finalQty = operation === 'decrement' ? availableQty-1 : availableQty+1;\n\n        const statement = await db.prepare('UPDATE books SET availableQty= ? where bookId= ? ');\n        const result = await statement.run(\n            finalQty,\n            bookId,\n        )\n        result.finalize();\n      }\n  }\n\n  export default BookRepository;"]},"metadata":{},"sourceType":"module"}