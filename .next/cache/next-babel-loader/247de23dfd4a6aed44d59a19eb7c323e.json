{"ast":null,"code":"import openDB from '../configs/database/dao';\nconst BookRepository = {\n  getAll: async () => {\n    const db = await openDB();\n    const books = await db.all('select * from books');\n    return books;\n  },\n  update: async book => {\n    const {\n      bookId,\n      availableQty\n    } = book;\n    const db = await openDB();\n    const statement = await db.prepare('UPDATE books SET availableQty= ? where bookId= ? ');\n    const result = await statement.run(availableQty, bookId);\n    result.finalize();\n  }\n};\nexport default BookRepository;","map":{"version":3,"sources":["/Users/Abhipray 1/Desktop/MY home/mYY work/HEXAD_assignment/Hexad_trial_code/hexad/backend/repositories/bookRepo.js"],"names":["openDB","BookRepository","getAll","db","books","all","update","book","bookId","availableQty","statement","prepare","result","run","finalize"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,YAAY;AAChB,UAAMC,EAAE,GAAG,MAAMH,MAAM,EAAvB;AACA,UAAMI,KAAK,GAAG,MAAMD,EAAE,CAACE,GAAH,CAAO,qBAAP,CAApB;AACA,WAAOD,KAAP;AACH,GALkB;AAOnBE,EAAAA,MAAM,EAAE,MAAOC,IAAP,IAAgB;AACpB,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAA2BF,IAAjC;AACA,UAAMJ,EAAE,GAAG,MAAMH,MAAM,EAAvB;AAEA,UAAMU,SAAS,GAAG,MAAMP,EAAE,CAACQ,OAAH,CAAW,mDAAX,CAAxB;AACA,UAAMC,MAAM,GAAG,MAAMF,SAAS,CAACG,GAAV,CACjBJ,YADiB,EAEjBD,MAFiB,CAArB;AAIAI,IAAAA,MAAM,CAACE,QAAP;AACD;AAjBgB,CAAvB;AAoBE,eAAeb,cAAf","sourcesContent":["import openDB from '../configs/database/dao';\n\nconst BookRepository = {\n    getAll: async () => {\n        const db = await openDB();\n        const books = await db.all('select * from books');\n        return books;\n    },\n\n    update: async (book) => {\n        const { bookId, availableQty } = book\n        const db = await openDB();\n\n        const statement = await db.prepare('UPDATE books SET availableQty= ? where bookId= ? ');\n        const result = await statement.run(\n            availableQty,\n            bookId,\n        )\n        result.finalize();\n      }\n  }\n\n  export default BookRepository;"]},"metadata":{},"sourceType":"module"}