{"ast":null,"code":"import openDB from '../configs/database/dao';\n\nconst BookRepository = () => {\n  // constructor(dao) {\n  //     // this.dao = dao\n  //     this.openDB = new openDB();\n  //   }\n  getAll = async () => {\n    //   return this.dao.all(`SELECT * FROM books`)\n    const db = await openDB(); // const db = this.openDB();\n\n    const books = await db.all('select * from books');\n    return books;\n  }; // update(book) {\n  //     const { id, name } = book\n  //     // return this.dao.run(\n  //     //   `UPDATE books SET name = ? WHERE id = ?`,\n  //     //   [name, id]\n  //     // )\n  //     return this.dao.run(\n  //         `UPDATE books SET name = ? WHERE id = ?`,\n  //         [name, id]\n  //       )\n  //     const statement = await db.prepare('UPDATE books SET availableQty= ? where bookId= ? ');\n  //       const result = await statement.run(\n  //           reqBody.cartData[index].availableQty-1,\n  //           reqBody.cartData[index].bookId,\n  //       )\n  //       result.finalize();\n  //   }\n\n};\n\nexport default BookRepository;","map":{"version":3,"sources":["/Users/Abhipray 1/Desktop/MY home/mYY work/HEXAD_assignment/Hexad_trial_code/hexd/backend/repositories/bookRepo.js"],"names":["openDB","BookRepository","getAll","db","books","all"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,yBAAnB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AACzB;AACA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG,YAAY;AACrB;AACI,UAAMC,EAAE,GAAG,MAAMH,MAAM,EAAvB,CAFiB,CAGjB;;AACA,UAAMI,KAAK,GAAG,MAAMD,EAAE,CAACE,GAAH,CAAO,qBAAP,CAApB;AACA,WAAOD,KAAP;AACH,GAND,CANyB,CAczB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,CAjCH;;AAmCE,eAAeH,cAAf","sourcesContent":["import openDB from '../configs/database/dao';\n\nconst BookRepository = () => {\n    // constructor(dao) {\n    //     // this.dao = dao\n    //     this.openDB = new openDB();\n    //   }\n  \n    getAll = async () => {\n    //   return this.dao.all(`SELECT * FROM books`)\n        const db = await openDB();\n        // const db = this.openDB();\n        const books = await db.all('select * from books');\n        return books;\n    }\n\n    // update(book) {\n    //     const { id, name } = book\n    //     // return this.dao.run(\n    //     //   `UPDATE books SET name = ? WHERE id = ?`,\n    //     //   [name, id]\n    //     // )\n\n    //     return this.dao.run(\n    //         `UPDATE books SET name = ? WHERE id = ?`,\n    //         [name, id]\n    //       )\n\n    //     const statement = await db.prepare('UPDATE books SET availableQty= ? where bookId= ? ');\n    //       const result = await statement.run(\n    //           reqBody.cartData[index].availableQty-1,\n    //           reqBody.cartData[index].bookId,\n    //       )\n    //       result.finalize();\n    //   }\n  }\n\n  export default BookRepository;"]},"metadata":{},"sourceType":"module"}