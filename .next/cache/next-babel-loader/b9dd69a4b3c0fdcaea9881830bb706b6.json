{"ast":null,"code":"import openDB from '../configs/database/dao';\nconst UserRepository = {\n  getAll: async () => {\n    const db = await openDB();\n    const users = await db.all('select * from users');\n    return users;\n  },\n  getUserDetails: async userId => {\n    const db = await openDB();\n    const userGetResult = await db.get('SELECT * FROM Users where userId = ?', [userId]);\n    return userGetResult;\n  },\n  update: async userDetails => {\n    const {\n      bookId,\n      userId\n    } = userDetails;\n    const db = await openDB();\n    const userUpdateStatement = await db.prepare('UPDATE Users SET bookIds= ? where userId= ? ');\n    const userUpdateResult = await userUpdateStatement.run(bookId, userId);\n    userUpdateResult.finalize();\n  }\n};\nexport default UserRepository;","map":{"version":3,"sources":["/Users/Abhipray 1/Desktop/MY home/mYY work/HEXAD_assignment/Hexad_trial_code/hexd/backend/repositories/userRepo.js"],"names":["openDB","UserRepository","getAll","db","users","all","getUserDetails","userId","userGetResult","get","update","userDetails","bookId","userUpdateStatement","prepare","userUpdateResult","run","finalize"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,YAAY;AAChB,UAAMC,EAAE,GAAG,MAAMH,MAAM,EAAvB;AACA,UAAMI,KAAK,GAAG,MAAMD,EAAE,CAACE,GAAH,CAAO,qBAAP,CAApB;AACA,WAAOD,KAAP;AACH,GALkB;AAOnBE,EAAAA,cAAc,EAAE,MAAOC,MAAP,IAAkB;AAC9B,UAAMJ,EAAE,GAAG,MAAMH,MAAM,EAAvB;AACA,UAAMQ,aAAa,GAAG,MAAML,EAAE,CAACM,GAAH,CAAO,sCAAP,EAA+C,CAACF,MAAD,CAA/C,CAA5B;AAEA,WAAOC,aAAP;AACH,GAZkB;AAcnBE,EAAAA,MAAM,EAAE,MAAOC,WAAP,IAAuB;AAC3B,UAAM;AAAEC,MAAAA,MAAF;AAAUL,MAAAA;AAAV,QAAqBI,WAA3B;AACA,UAAMR,EAAE,GAAG,MAAMH,MAAM,EAAvB;AAEA,UAAMa,mBAAmB,GAAG,MAAMV,EAAE,CAACW,OAAH,CAAW,8CAAX,CAAlC;AACA,UAAMC,gBAAgB,GAAG,MAAMF,mBAAmB,CAACG,GAApB,CAC3BJ,MAD2B,EAE3BL,MAF2B,CAA/B;AAIAQ,IAAAA,gBAAgB,CAACE,QAAjB;AACD;AAxBgB,CAAvB;AA2BE,eAAehB,cAAf","sourcesContent":["import openDB from '../configs/database/dao';\n\nconst UserRepository = {\n    getAll: async () => {\n        const db = await openDB();\n        const users = await db.all('select * from users');\n        return users;\n    },\n\n    getUserDetails: async (userId) => {\n        const db = await openDB();\n        const userGetResult = await db.get('SELECT * FROM Users where userId = ?', [userId]);\n\n        return userGetResult;\n    },\n\n    update: async (userDetails) => {\n        const { bookId, userId } = userDetails\n        const db = await openDB();\n\n        const userUpdateStatement = await db.prepare('UPDATE Users SET bookIds= ? where userId= ? ');\n        const userUpdateResult = await userUpdateStatement.run(\n            bookId,\n            userId,\n        );\n        userUpdateResult.finalize();\n      }\n  }\n\n  export default UserRepository;"]},"metadata":{},"sourceType":"module"}