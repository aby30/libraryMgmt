{"ast":null,"code":"import sqlite from 'sqlite';\nexport default (async (req, res) => {\n  res.statusCode = 200;\n  const db = await sqlite.open('./library.sqlite');\n  const reqBody = JSON.parse(req.body);\n  let bookIds = '';\n  console.log(`reqBodyreqBody---->${JSON.stringify(reqBody)}`);\n\n  if (reqBody.cartData.length > 0) {\n    for (let index = 0; index < reqBody.cartData.length; index++) {\n      const statement = await db.prepare('UPDATE books SET availableQty= ? where bookId= ? ');\n      const result = await statement.run(reqBody.cartData[index].availableQty - 1, reqBody.cartData[index].bookId);\n      result.finalize();\n      if (bookIds.length === 0) bookIds = reqBody.cartData[index].bookId.toString();else bookIds.concat(`${reqBody.cartData[index].bookId}`);\n    }\n  }\n\n  console.log(`bookIdsbookIdsbookIds---->${bookIds}`);\n  const userUpdateStatement = await db.prepare('UPDATE Users SET bookIds= ? where userId= ? ');\n  const userUpdateResult = await userUpdateStatement.run(bookIds, reqBody.userId);\n  userUpdateResult.finalize();\n  res.json({\n    data: 'Borrowed succesfully'\n  });\n});","map":{"version":3,"sources":["/Users/Abhipray 1/Desktop/MY home/mYY work/HEXAD_assignment/Hexad_trial_code/hexd/pages/api/borrowBooks/index.js"],"names":["sqlite","req","res","statusCode","db","open","reqBody","JSON","parse","body","bookIds","console","log","stringify","cartData","length","index","statement","prepare","result","run","availableQty","bookId","finalize","toString","concat","userUpdateStatement","userUpdateResult","userId","json","data"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjCA,EAAAA,GAAG,CAACC,UAAJ,GAAiB,GAAjB;AACA,QAAMC,EAAE,GAAG,MAAMJ,MAAM,CAACK,IAAP,CAAY,kBAAZ,CAAjB;AACA,QAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWP,GAAG,CAACQ,IAAf,CAAhB;AACA,MAAIC,OAAO,GAAG,EAAd;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,sBAAqBL,IAAI,CAACM,SAAL,CAAeP,OAAf,CAAwB,EAA1D;;AAEA,MAAIA,OAAO,CAACQ,QAAR,CAAiBC,MAAjB,GAA0B,CAA9B,EAAiC;AAC/B,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGV,OAAO,CAACQ,QAAR,CAAiBC,MAA7C,EAAqDC,KAAK,EAA1D,EAA8D;AAC1D,YAAMC,SAAS,GAAG,MAAMb,EAAE,CAACc,OAAH,CAAW,mDAAX,CAAxB;AACA,YAAMC,MAAM,GAAG,MAAMF,SAAS,CAACG,GAAV,CACjBd,OAAO,CAACQ,QAAR,CAAiBE,KAAjB,EAAwBK,YAAxB,GAAqC,CADpB,EAEjBf,OAAO,CAACQ,QAAR,CAAiBE,KAAjB,EAAwBM,MAFP,CAArB;AAIAH,MAAAA,MAAM,CAACI,QAAP;AACA,UAAIb,OAAO,CAACK,MAAR,KAAmB,CAAvB,EACIL,OAAO,GAAGJ,OAAO,CAACQ,QAAR,CAAiBE,KAAjB,EAAwBM,MAAxB,CAA+BE,QAA/B,EAAV,CADJ,KAGId,OAAO,CAACe,MAAR,CAAgB,GAAEnB,OAAO,CAACQ,QAAR,CAAiBE,KAAjB,EAAwBM,MAAO,EAAjD;AACP;AACF;;AAEDX,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BF,OAAQ,EAAjD;AAEA,QAAMgB,mBAAmB,GAAG,MAAMtB,EAAE,CAACc,OAAH,CAAW,8CAAX,CAAlC;AACA,QAAMS,gBAAgB,GAAG,MAAMD,mBAAmB,CAACN,GAApB,CAC3BV,OAD2B,EAE3BJ,OAAO,CAACsB,MAFmB,CAA/B;AAIAD,EAAAA,gBAAgB,CAACJ,QAAjB;AAEArB,EAAAA,GAAG,CAAC2B,IAAJ,CAAS;AACPC,IAAAA,IAAI,EAAE;AADC,GAAT;AAGD,CAnCD","sourcesContent":["import sqlite from 'sqlite';\n\nexport default async (req, res) => {\n  res.statusCode = 200;\n  const db = await sqlite.open('./library.sqlite');\n  const reqBody = JSON.parse(req.body);\n  let bookIds = ''\n\n  console.log(`reqBodyreqBody---->${JSON.stringify(reqBody)}`);\n\n  if (reqBody.cartData.length > 0) {\n    for (let index = 0; index < reqBody.cartData.length; index++) {\n        const statement = await db.prepare('UPDATE books SET availableQty= ? where bookId= ? ');\n        const result = await statement.run(\n            reqBody.cartData[index].availableQty-1,\n            reqBody.cartData[index].bookId,\n        )\n        result.finalize();\n        if (bookIds.length === 0)\n            bookIds = reqBody.cartData[index].bookId.toString()\n        else\n            bookIds.concat(`${reqBody.cartData[index].bookId}`)\n    }\n  }\n\n  console.log(`bookIdsbookIdsbookIds---->${bookIds}`);\n\n  const userUpdateStatement = await db.prepare('UPDATE Users SET bookIds= ? where userId= ? ');\n  const userUpdateResult = await userUpdateStatement.run(\n      bookIds,\n      reqBody.userId,\n  )\n  userUpdateResult.finalize();\n\n  res.json({ \n    data: 'Borrowed succesfully'\n  });\n}\n"]},"metadata":{},"sourceType":"module"}